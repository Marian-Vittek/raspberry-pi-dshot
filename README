
This project allows to generate DSHOT protocol to control ESCs via the
GPIO pins of a Raspberry Pi.  It was developed and used on Raspberry
Pi Zero 2, but should work on any Raspberry Pi including Rpi 5.

We have a more sophisticated implementation for Raspberry Pi 5 using
RP1 coprocessor at
https://github.com/Marian-Vittek/raspberry-pi-dshot-pio .

There is another implementation based on SMI hardware of Raspberry Pi 1/2/3/4 at 
https://github.com/Marian-Vittek/raspberry-pi-dshot-smi .

This directory contains a 'naive' implementation inspired by
https://github.com/dmrlawson/raspberrypi-dshot. Compared to it this
version:

- uses "clock_gettime" instead of an empty loop.
- allows multiple frames to be sent to multiple pins at once.

The implementation handles the DSHOT 150 well enough. It runs
on standard Raspbian OS, no RT extension is needed. However, it may
help to set the task to the highest priority and use some hacks from
https://forums.raspberrypi.com/viewtopic.php?t=245561&amp;sid=d3b2f6139ccf00a88aa7a98db2aed7f3
to reduce interrupts on a specific core.

To compile and run a simple test that spins 4 motors connected to GPIO
16, 19, 20 and 21, type

    	   make test
	   sudo chrt -f 99 ./test 16 19 20 21

If it does not work you may need to edit 'motor-dshot.c' and adjust
DSHOT_BIT_ns and/or DSHOT_T0H_ns macro.
